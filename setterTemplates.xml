<application>
  <component name="SetterTemplates">
    <option name="defaultTempalteName" value="IntelliJ Default" />
    <option name="templates">
      <list>
        <TemplateResource>
          <option name="fileName" value="JSON Setter" />
          <option name="template" value="#set($paramName = $helper.getParamName($field, $project))&#10;/**&#10;*Sets the value of $field.name&#10;*@param $paramName the value that will be set&#10;**/&#10;@JsonProperty(&quot;$field.name&quot;)&#10;#if($field.modifierStatic)&#10;static ##&#10;#end&#10;void set$StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project)))($field.type $paramName) {&#10;  #if ($field.name == $paramName)&#10;    #if (!$field.modifierStatic)&#10;      this.##&#10;    #else&#10;      $classname.##&#10;    #end&#10;  #end&#10;  $field.name = $paramName;&#10;}" />
        </TemplateResource>
        <TemplateResource>
          <option name="fileName" value="Java setter" />
          <option name="template" value="#set($paramName = $helper.getParamName($field, $project))&#10;&#10;#if($field.modifierStatic)&#10;static ##&#10;#end&#10;void set$StringUtil.capitalizeWithJavaBeanConvention($StringUtil.sanitizeJavaIdentifier($helper.getPropertyName($field, $project)))($field.type $paramName) {&#10;  #if ($field.name == $paramName)&#10;    #if (!$field.modifierStatic)&#10;      this.##&#10;    #else&#10;      $classname.##&#10;    #end&#10;  #end&#10;  $field.name = $paramName;&#10;}" />
        </TemplateResource>
      </list>
    </option>
  </component>
</application>